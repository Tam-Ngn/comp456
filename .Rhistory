p <- p + 1
}
} else if(response$status_code == 429) {
cat("Daily limit reached for current key. Switching to next key.\n")
keys <- keys[-1]
if(length(keys) == 0) {
cat("All keys have reached the daily limit. Exiting loop.\n")
break
} else {
key <- keys[1]
cat("Using key", key, "for next request.\n")
}
Sys.sleep(60)
} else {
cat("API request failed with status code", response$status_code, "\n")
break
}
}, error = function(e) {
cat("Error in API request:", conditionMessage(e), "\n")
break
})
Sys.sleep(12)
}
}
load("D:/comp456/Articles Data/biden_nytimes_2021.RData")
article <- NULL
body_text_tot <- NULL
failures <- 0
# updated version of text pulling code
for (i in 1:length(totalarticles$web_url)) {
tryCatch({
response <- GET(totalarticles$web_url[i])
if (response$status_code == 500) {
failures <- failures + 1
if (failures < 3) {
cat("# of failures :", failures, "\n", "API request failed with 500 status code. Pause 60s and retrying \n")
Sys.sleep(60)
}
else {
cat("# of failures :", failures, "\n", "API request failed with 500 status code. Pause 180s and retrying \n")
Sys.sleep(180)
failures <- 0
}
}
else if (response$status_code == 200) {
article <- read_html(totalarticles$web_url[i])
body_text <-
article %>%
html_elements(".css-at9mc1.evys1bk0") %>%
html_text()
body_text_coll<- tibble(url = totalarticles$web_url[i], text = paste(body_text, collapse = " "))
body_text_tot <- bind_rows(body_text_tot, body_text_coll)
cat("# of article text pulled: ", nrow(body_text_tot), "\n")
}
else if (response$status_code == 404) {
cat("The url:", web_url[i], "returned a 404 status code. Skipping to the next url. \n")
next
}
else {
cat("API request failed with status code", response$status_code, "\n")
break
}
}, error = function(e) {
cat("Error in API request:", conditionMessage(e), "\n")
break
})
}
library(jsonlite)
library(tidyverse)
library(lubridate)
library(rvest)
library(httr)
library(dplyr)
library(purrr)
for (i in 1:length(totalarticles$web_url)) {
tryCatch({
response <- GET(totalarticles$web_url[i])
if (response$status_code == 500) {
failures <- failures + 1
if (failures < 3) {
cat("# of failures :", failures, "\n", "API request failed with 500 status code. Pause 60s and retrying \n")
Sys.sleep(60)
}
else {
cat("# of failures :", failures, "\n", "API request failed with 500 status code. Pause 180s and retrying \n")
Sys.sleep(180)
failures <- 0
}
}
else if (response$status_code == 200) {
article <- read_html(totalarticles$web_url[i])
body_text <-
article %>%
html_elements(".css-at9mc1.evys1bk0") %>%
html_text()
body_text_coll<- tibble(url = totalarticles$web_url[i], text = paste(body_text, collapse = " "))
body_text_tot <- bind_rows(body_text_tot, body_text_coll)
cat("# of article text pulled: ", nrow(body_text_tot), "\n")
}
else if (response$status_code == 404) {
cat("The url:", web_url[i], "returned a 404 status code. Skipping to the next url. \n")
next
}
else {
cat("API request failed with status code", response$status_code, "\n")
break
}
}, error = function(e) {
cat("Error in API request:", conditionMessage(e), "\n")
break
})
}
for (i in 218:length(totalarticles$web_url)) {
tryCatch({
response <- GET(totalarticles$web_url[i])
if (response$status_code == 500) {
failures <- failures + 1
if (failures < 3) {
cat("# of failures :", failures, "\n", "API request failed with 500 status code. Pause 60s and retrying \n")
Sys.sleep(60)
}
else {
cat("# of failures :", failures, "\n", "API request failed with 500 status code. Pause 180s and retrying \n")
Sys.sleep(180)
failures <- 0
}
}
else if (response$status_code == 200) {
article <- read_html(totalarticles$web_url[i])
body_text <-
article %>%
html_elements(".css-at9mc1.evys1bk0") %>%
html_text()
body_text_coll<- tibble(url = totalarticles$web_url[i], text = paste(body_text, collapse = " "))
body_text_tot <- bind_rows(body_text_tot, body_text_coll)
cat("# of article text pulled: ", nrow(body_text_tot), "\n")
}
else if (response$status_code == 404) {
cat("The url:", web_url[i], "returned a 404 status code. Skipping to the next url. \n")
next
}
else {
cat("API request failed with status code", response$status_code, "\n")
break
}
}, error = function(e) {
cat("Error in API request:", conditionMessage(e), "\n")
break
})
}
for (i in 577:length(totalarticles$web_url)) {
tryCatch({
response <- GET(totalarticles$web_url[i])
if (response$status_code == 500) {
failures <- failures + 1
if (failures < 3) {
cat("# of failures :", failures, "\n", "API request failed with 500 status code. Pause 60s and retrying \n")
Sys.sleep(60)
}
else {
cat("# of failures :", failures, "\n", "API request failed with 500 status code. Pause 180s and retrying \n")
Sys.sleep(180)
failures <- 0
}
}
else if (response$status_code == 200) {
article <- read_html(totalarticles$web_url[i])
body_text <-
article %>%
html_elements(".css-at9mc1.evys1bk0") %>%
html_text()
body_text_coll<- tibble(url = totalarticles$web_url[i], text = paste(body_text, collapse = " "))
body_text_tot <- bind_rows(body_text_tot, body_text_coll)
cat("# of article text pulled: ", nrow(body_text_tot), "\n")
}
else if (response$status_code == 404) {
cat("The url:", web_url[i], "returned a 404 status code. Skipping to the next url. \n")
next
}
else {
cat("API request failed with status code", response$status_code, "\n")
break
}
}, error = function(e) {
cat("Error in API request:", conditionMessage(e), "\n")
break
})
}
for (i in 727:length(totalarticles$web_url)) {
tryCatch({
response <- GET(totalarticles$web_url[i])
if (response$status_code == 500) {
failures <- failures + 1
if (failures < 3) {
cat("# of failures :", failures, "\n", "API request failed with 500 status code. Pause 60s and retrying \n")
Sys.sleep(60)
}
else {
cat("# of failures :", failures, "\n", "API request failed with 500 status code. Pause 180s and retrying \n")
Sys.sleep(180)
failures <- 0
}
}
else if (response$status_code == 200) {
article <- read_html(totalarticles$web_url[i])
body_text <-
article %>%
html_elements(".css-at9mc1.evys1bk0") %>%
html_text()
body_text_coll<- tibble(url = totalarticles$web_url[i], text = paste(body_text, collapse = " "))
body_text_tot <- bind_rows(body_text_tot, body_text_coll)
cat("# of article text pulled: ", nrow(body_text_tot), "\n")
}
else if (response$status_code == 404) {
cat("The url:", web_url[i], "returned a 404 status code. Skipping to the next url. \n")
next
}
else {
cat("API request failed with status code", response$status_code, "\n")
break
}
}, error = function(e) {
cat("Error in API request:", conditionMessage(e), "\n")
break
})
}
for (i in 727:length(totalarticles$web_url)) {
tryCatch({
response <- GET(totalarticles$web_url[i])
if (response$status_code == 500) {
failures <- failures + 1
if (failures < 3) {
cat("# of failures :", failures, "\n", "API request failed with 500 status code. Pause 60s and retrying \n")
Sys.sleep(60)
}
else {
cat("# of failures :", failures, "\n", "API request failed with 500 status code. Pause 180s and retrying \n")
Sys.sleep(180)
failures <- 0
}
}
else if (response$status_code == 200) {
article <- read_html(totalarticles$web_url[i])
body_text <-
article %>%
html_elements(".css-at9mc1.evys1bk0") %>%
html_text()
body_text_coll<- tibble(url = totalarticles$web_url[i], text = paste(body_text, collapse = " "))
body_text_tot <- bind_rows(body_text_tot, body_text_coll)
cat("# of article text pulled: ", nrow(body_text_tot), "\n")
}
else if (response$status_code == 404) {
cat("The url:", web_url[i], "returned a 404 status code. Skipping to the next url. \n")
next
}
else {
cat("API request failed with status code", response$status_code, "\n")
break
}
}, error = function(e) {
cat("Error in API request:", conditionMessage(e), "\n")
break
})
}
for (i in 1172:length(totalarticles$web_url)) {
tryCatch({
response <- GET(totalarticles$web_url[i])
if (response$status_code == 500) {
failures <- failures + 1
if (failures < 3) {
cat("# of failures :", failures, "\n", "API request failed with 500 status code. Pause 60s and retrying \n")
Sys.sleep(60)
}
else {
cat("# of failures :", failures, "\n", "API request failed with 500 status code. Pause 180s and retrying \n")
Sys.sleep(180)
failures <- 0
}
}
else if (response$status_code == 200) {
article <- read_html(totalarticles$web_url[i])
body_text <-
article %>%
html_elements(".css-at9mc1.evys1bk0") %>%
html_text()
body_text_coll<- tibble(url = totalarticles$web_url[i], text = paste(body_text, collapse = " "))
body_text_tot <- bind_rows(body_text_tot, body_text_coll)
cat("# of article text pulled: ", nrow(body_text_tot), "\n")
}
else if (response$status_code == 404) {
cat("The url:", web_url[i], "returned a 404 status code. Skipping to the next url. \n")
next
}
else {
cat("API request failed with status code", response$status_code, "\n")
break
}
}, error = function(e) {
cat("Error in API request:", conditionMessage(e), "\n")
break
})
Sys.sleep(6)
}
for (i in 1347:length(totalarticles$web_url)) {
tryCatch({
response <- GET(totalarticles$web_url[i])
if (response$status_code == 500) {
failures <- failures + 1
if (failures < 3) {
cat("# of failures :", failures, "\n", "API request failed with 500 status code. Pause 60s and retrying \n")
Sys.sleep(60)
}
else {
cat("# of failures :", failures, "\n", "API request failed with 500 status code. Pause 180s and retrying \n")
Sys.sleep(180)
failures <- 0
}
}
else if (response$status_code == 200) {
article <- read_html(totalarticles$web_url[i])
body_text <-
article %>%
html_elements(".css-at9mc1.evys1bk0") %>%
html_text()
body_text_coll<- tibble(url = totalarticles$web_url[i], text = paste(body_text, collapse = " "))
body_text_tot <- bind_rows(body_text_tot, body_text_coll)
cat("# of article text pulled: ", nrow(body_text_tot), "\n")
}
else if (response$status_code == 404) {
cat("The url:", web_url[i], "returned a 404 status code. Skipping to the next url. \n")
next
}
else {
cat("API request failed with status code", response$status_code, "\n")
break
}
}, error = function(e) {
cat("Error in API request:", conditionMessage(e), "\n")
break
})
}
load("D:/comp456/Articles Data/trump_nytimes_2021_text.RData")
View(text_trump_after)
load("D:/comp456/Articles Data/trump_nytimes_2021.RData")
load("D:/comp456/Articles Data/trump_nytimes_2021.RData")
View(totalarticles)
load("D:/comp456/Articles Data/trump_nytimes_2021_text.RData")
load("D:/comp456/Articles Data/biden_nytimes_2021.RData")
library(jsonlite)
library(tidyverse)
library(lubridate)
library(rvest)
library(httr)
library(dplyr)
library(purrr)
article <- NULL
body_text_tot <- NULL
failures <- 0
# updated version of text pulling code
for (i in 6001:length(totalarticles$web_url)) {
tryCatch({
response <- GET(totalarticles$web_url[i])
if (response$status_code == 500) {
failures <- failures + 1
if (failures < 3) {
cat("# of failures :", failures, "\n", "API request failed with 500 status code. Pause 60s and retrying \n")
Sys.sleep(60)
}
else {
cat("# of failures :", failures, "\n", "API request failed with 500 status code. Pause 180s and retrying \n")
Sys.sleep(180)
failures <- 0
}
}
else if (response$status_code == 200) {
article <- read_html(totalarticles$web_url[i])
body_text <-
article %>%
html_elements(".css-at9mc1.evys1bk0") %>%
html_text()
body_text_coll<- tibble(url = totalarticles$web_url[i], text = paste(body_text, collapse = " "))
body_text_tot <- bind_rows(body_text_tot, body_text_coll)
cat("# of article text pulled: ", nrow(body_text_tot), "\n")
}
else if (response$status_code == 404) {
cat("The url:", web_url[i], "returned a 404 status code. Skipping to the next url. \n")
next
}
else {
cat("API request failed with status code", response$status_code, "\n")
break
}
}, error = function(e) {
cat("Error in API request:", conditionMessage(e), "\n")
break
})
}
for (i in 6212:length(totalarticles$web_url)) {
tryCatch({
response <- GET(totalarticles$web_url[i])
if (response$status_code == 500) {
failures <- failures + 1
if (failures < 3) {
cat("# of failures :", failures, "\n", "API request failed with 500 status code. Pause 60s and retrying \n")
Sys.sleep(60)
}
else {
cat("# of failures :", failures, "\n", "API request failed with 500 status code. Pause 180s and retrying \n")
Sys.sleep(180)
failures <- 0
}
}
else if (response$status_code == 200) {
article <- read_html(totalarticles$web_url[i])
body_text <-
article %>%
html_elements(".css-at9mc1.evys1bk0") %>%
html_text()
body_text_coll<- tibble(url = totalarticles$web_url[i], text = paste(body_text, collapse = " "))
body_text_tot <- bind_rows(body_text_tot, body_text_coll)
cat("# of article text pulled: ", nrow(body_text_tot), "\n")
}
else if (response$status_code == 404) {
cat("The url:", web_url[i], "returned a 404 status code. Skipping to the next url. \n")
next
}
else {
cat("API request failed with status code", response$status_code, "\n")
break
}
}, error = function(e) {
cat("Error in API request:", conditionMessage(e), "\n")
break
})
}
for (i in 7765:length(totalarticles$web_url)) {
tryCatch({
response <- GET(totalarticles$web_url[i])
if (response$status_code == 500) {
failures <- failures + 1
if (failures < 3) {
cat("# of failures :", failures, "\n", "API request failed with 500 status code. Pause 60s and retrying \n")
Sys.sleep(60)
}
else {
cat("# of failures :", failures, "\n", "API request failed with 500 status code. Pause 180s and retrying \n")
Sys.sleep(180)
failures <- 0
}
}
else if (response$status_code == 200) {
article <- read_html(totalarticles$web_url[i])
body_text <-
article %>%
html_elements(".css-at9mc1.evys1bk0") %>%
html_text()
body_text_coll<- tibble(url = totalarticles$web_url[i], text = paste(body_text, collapse = " "))
body_text_tot <- bind_rows(body_text_tot, body_text_coll)
cat("# of article text pulled: ", nrow(body_text_tot), "\n")
}
else if (response$status_code == 404) {
cat("The url:", web_url[i], "returned a 404 status code. Skipping to the next url. \n")
next
}
else {
cat("API request failed with status code", response$status_code, "\n")
break
}
}, error = function(e) {
cat("Error in API request:", conditionMessage(e), "\n")
break
})
}
for (i in 9842:length(totalarticles$web_url)) {
tryCatch({
response <- GET(totalarticles$web_url[i])
if (response$status_code == 500) {
failures <- failures + 1
if (failures < 3) {
cat("# of failures :", failures, "\n", "API request failed with 500 status code. Pause 60s and retrying \n")
Sys.sleep(60)
}
else {
cat("# of failures :", failures, "\n", "API request failed with 500 status code. Pause 180s and retrying \n")
Sys.sleep(180)
failures <- 0
}
}
else if (response$status_code == 200) {
article <- read_html(totalarticles$web_url[i])
body_text <-
article %>%
html_elements(".css-at9mc1.evys1bk0") %>%
html_text()
body_text_coll<- tibble(url = totalarticles$web_url[i], text = paste(body_text, collapse = " "))
body_text_tot <- bind_rows(body_text_tot, body_text_coll)
cat("# of article text pulled: ", nrow(body_text_tot), "\n")
}
else if (response$status_code == 404) {
cat("The url:", web_url[i], "returned a 404 status code. Skipping to the next url. \n")
next
}
else {
cat("API request failed with status code", response$status_code, "\n")
break
}
}, error = function(e) {
cat("Error in API request:", conditionMessage(e), "\n")
break
})
}
save(body_text_tot, file = "biden_nytimes_2021_text_2.RData")
