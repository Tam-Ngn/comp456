knitr::opts_chunk$set(echo = TRUE, error = TRUE)
library(tidyverse)
library(ggplot2)
library(dbplyr)
library(gutenbergr)
library(tidytext)
install.packages("tidytext")
library(tidytext)
knitr::opts_chunk$set(echo = TRUE, error = TRUE)
library(tidyverse)
library(ggplot2)
library(dbplyr)
library(gutenbergr)
library(tidytext)
library(stringr)
knitr::opts_chunk$set(echo = TRUE, error = TRUE)
library(tidyverse)
library(ggplot2)
library(dbplyr)
library(gutenbergr)
library(tidytext)
library(stringr)
library(janeaustenr)
original_books <- austen_books() %>%
group_by(book) %>%
mutate(linenumber = row_number(),
chapter = cumsum(str_detect(text,
regex("^chapter [\\divxlc]",
ignore_case = TRUE)))) %>%
ungroup()
original_books
unnest_our_tokens <- original_books $>$ unnest_tokens(word, text)
knitr::opts_chunk$set(echo = TRUE, error = TRUE)
library(tidyverse)
library(ggplot2)
library(dbplyr)
library(gutenbergr)
library(tidytext)
library(stringr)
library(janeaustenr)
tidy_books <- original_books %>%
unnest_tokens(word, text)
data("stop_words")
tidy_books <- tidy_books %>%
anti_join(stop_words)
bronte <- gutenberg_download(c(1260, 768, 969, 9182, 767))
library(scales)
get_sentiments("nrc")
install.packages("textdata")
library(textdata)
get_sentiments("nrc")
library(knitr)
knitr::opts_chunk$set(echo = TRUE, error = TRUE)
library(tidyverse)
install.packages("ggraph")
install.packages("topicmodels")
knitr::opts_chunk$set(echo = FALSE, error = FALSE)
library(tidyverse)
library(ggplot2)
library(dbplyr)
library(gutenbergr)
library(tidytext)
library(stringr)
library(janeaustenr)
data("stop_words")
library(scales)
library(textdata)
library(topicmodels)
cor.test(data = frequency[frequency$author == "Brontë Sisters",],
~ proportion + `Jane Austen`)
library(stats)
cor.test(data = frequency[frequency$author == "Brontë Sisters",],
~ proportion + `Jane Austen`)
cor.test(data = frequency[frequency$author == "Brontë Sisters",],
~ proportion + `Jane Austen`)
cor.test(data = frequency[frequency$author == "Brontë Sisters",]
~ proportion + `Jane Austen`)
cor.test(data = frequency[frequency$author == "Brontë Sisters",]
~ proportion + `Jane Austen`)
cor.test(data = frequency[frequency$author == "Brontë Sisters",]
~ proportion + `Jane Austen`)
cor.test(data = frequency[frequency$author == "Brontë Sisters",],
~ proportion + `Jane Austen`)
cor.test(data = frequency[frequency$author == "Brontë Sisters",],
~ proportion + `Jane Austen`)
cor.test(data = frequency[frequency$author == "Brontë Sisters",],
~ proportion + `Jane Austen`)
cor.test(data = frequency[frequency$author == "Brontë Sisters",],
~ proportion + `Jane Austen`)
cor.test(data = frequency[frequency$author == "Brontë Sisters",],
~ proportion + `Jane Austen`)
cor.test(data = frequency[frequency$author == "Brontë Sisters",],
~ proportion + `Jane Austen`)
cor.test(data = frequency[frequency$author == "Brontë Sisters",],
~ proportion + `Jane Austen`)
cor.test(data = frequency[frequency$author == "Brontë Sisters",],
~ proportion + `Jane Austen`)
cor.test(data = frequency[frequency$author == "Brontë Sisters",],
~ proportion + `Jane Austen`)
cor.test(data = frequency[frequency$author == "Brontë Sisters",],
~ proportion + `Jane Austen`)
cor.test(data = frequency[frequency$author == "Brontë Sisters",],
~ proportion + `Jane Austen`)
cor.test(data = frequency[frequency$author == "Brontë Sisters",],
~ proportion + `Jane Austen`)
cor.test(data = frequency[frequency$author == "Brontë Sisters",],
~ proportion + `Jane Austen`)
cor.test(data = frequency[frequency$author == "Brontë Sisters",],
~ proportion + `Jane Austen`)
cor.test(data = frequency[frequency$author == "Brontë Sisters",],
~ proportion + `Jane Austen`)
cor.test(data = frequency[frequency$author == "Brontë Sisters",],
~ proportion + `Jane Austen`)
frequency <- bind_rows(mutate (bronte, author =
"Bronte Sister"),
mutate(tidy_books, author = "Jane Austen"))
knitr::opts_chunk$set(echo = FALSE, error = FALSE)
library(tidyverse)
library(ggplot2)
library(dbplyr)
library(gutenbergr)
library(tidytext)
library(stringr)
library(janeaustenr)
data("stop_words")
library(scales)
library(textdata)
library(topicmodels)
library(stats)
# DTM
data("AssociatedPress", package = "topicmodels")
# tidying a DTM
ap_td <- tidy(AssociatedPress)
ap_td
# joining tidy dataframe with sentiments dataframe
ap_sentiments <- ap_td %>%
inner_join(get_sentiments("bing"), by = c(term = "word"))
# As we’ve seen in previous chapters, this form is convenient for analysis with the dplyr,
# tidytext and ggplot2 packages. For example, you can perform sentiment analysis on these newspaper articles
# by joining tidy dataframe with sentiments dataset ('bing', 'nrc', 'afinn', 'loughran').
ap_sentiments %>%
count(sentiment, term, wt = count) %>%
ungroup() %>%
filter(n > 200) %>%
mutate(m = ifelse(sentiment == "positive", n, -n)) %>%
mutate(term = reorder(term, m)) %>%
ggplot(aes(x = m, y = term, fill = sentiment)) +
geom_col() +
labs(x = "Contribution to Sentiment", y = "")
# casting a tidy dataframe
ap_td %>%
cast_dtm(document, term, count)
original_books <- austen_books() %>%
group_by(book) %>%
mutate(linenumber = row_number(),
chapter = cumsum(str_detect(text,
regex("^chapter [\\divxlc]",
ignore_case = TRUE)))) %>%
ungroup()
original_books
tidy_books <- original_books %>%
unnest_tokens(word, text)
tidy_books <- tidy_books %>%
anti_join(stop_words)
tidy_books
bronte <- gutenberg_download(c(1260, 768, 969, 9182, 767))
frequency <- bind_rows(mutate (bronte, author =
"Bronte Sister"),
mutate(tidy_books, author = "Jane Austen"))
## Can you find a way to use a regx here?
cor.test(data = frequency[frequency$author == "Brontë Sisters",],
~ proportion + `Jane Austen`)
knitr::opts_chunk$set(echo = FALSE, error = FALSE)
library(tidyverse)
library(ggplot2)
library(dbplyr)
library(gutenbergr)
library(tidytext)
library(stringr)
library(janeaustenr)
data("stop_words")
library(scales)
library(textdata)
library(topicmodels)
library(stats)
cor.test(data = frequency[frequency$author == "Brontë Sisters",],
~ proportion + `Jane Austen`)
cor.test(data = frequency[frequency$author == "Brontë Sisters",],
~ proportion + `Jane Austen`)
cor.test(data = frequency[frequency$author == "Brontë Sisters",],
~ proportion + `Jane Austen`)
cor.test(data = frequency[frequency$author == "Brontë Sisters",],
~ proportion + `Jane Austen`)
#create the network
set.seed(456) #the node positions are random
a <- grid::arrow(type = "closed", length = unit(.1, "inches")) #create arrows to specify word1 and word2
ggraph(bigram_graph, layout = "fr") +
geom_edge_link(aes(edge_alpha = n), show.legend = FALSE,
arrow = a, end_cap = circle(.05, 'inches')) +
geom_node_point(color = "lightblue", size = 4) +
geom_node_text(aes(label = name), vjust = 1, hjust = 1) +
theme_void()
